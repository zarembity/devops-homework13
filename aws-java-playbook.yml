---

- name: Create aws ec2 instances
  hosts: localhost
  gather_facts: False
  vars:
    keypair: mego-secret-key4
    instance_type: t2.micro
    security_group: default
    image: ami-08962a4068733a2b6
    region: us-east-2
    vps_subnet: subnet-68c8d312
    mybaket: mybacket10.test7.com
  tasks:
    - name: Ensure pip pakage is present
      apt:
        name: python3-pip
        state: present
    - name: Ensure boto python package
      pip:
        name: boto

    - name: Create a new EC2 key
      ec2_key:
        aws_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
        aws_secret_key: "{{ lookup('env', 'AWS_ACCESS_KEY') }}"
        name: "{{ keypair }}"
        region: "{{region}}"
      register: ec2_key_result

    - name: Print EC2 key
      debug:
        var: ec2_key_result

    - name: create key pair using key_material obtained using 'file' lookup plugin
      amazon.aws.ec2_key:
        name: my_keypair
        aws_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
        aws_secret_key: "{{ lookup('env', 'AWS_ACCESS_KEY') }}"
        region: "{{ region }}"
        key_material: "{{ lookup('file', '/root/.ssh/ava_rsa.pub') }}"

    - name: Launch instance
      amazon.aws.ec2:
        aws_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
        aws_secret_key: "{{ lookup('env', 'AWS_ACCESS_KEY') }}"
        key_name: "{{ keypair }}"
        group: "{{ security_group }}"
        instance_type: "{{ instance_type }}"
        image: "{{ image }}"
        wait: yes
        region: "{{ region }}"
        vpc_subnet_id: "{{vps_subnet}}"
        assign_public_ip: yes
        instance_tags:
          exersise: "homework-13"
          Name: builder-vm
        count_tag: exersise
        exact_count: 1
      register: output

    - name: print
      debug:
        var: output
    - name: update inventory
      add_host:
        name: "{{ output.tagged_instances[0].public_ip }}"
        groups: amazon

- name: Builder run
  hosts: amazon
  remote_user: ubuntu
  become: yes
  become_user: root
  vars:
    mybaket: mybacket10.test7.com
  tasks:
    - name: Run the equivalent of "apt-get update" as a separate step
      apt:
        update_cache: yes
    - name: Ensure pip pakage is present
      apt:
        name: python3-pip
        state: present
    - name: Ensure boto python package
      pip:
        name: boto
    - name: Ensure default-jdk package is present
      apt:
        name: default-jdk
        state: present
    - name: Install maven
      apt:
        name: maven
        state: present
    - name: Ensure git package is present
      apt:
        name: git
        state: present
    - name: Ensure isset repository
      git:
        repo: https://github.com/boxfuse/boxfuse-sample-java-war-hello.git
        version: master
        dest: /tmp/hello-app
    - name: java app package
      command: mvn -f /tmp/hello-app/pom.xml package
    - name: PUT war to backet
      amazon.aws.aws_s3:
        aws_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
        aws_secret_key: "{{ lookup('env', 'AWS_ACCESS_KEY') }}"
        bucket: "{{mybaket}}"
        object: /deploy/hello-1.0.war
        src: /tmp/hello-app/target/hello-1.0.war
        mode: put
      become: yes